(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))l(r);new MutationObserver(r=>{for(const c of r)if(c.type==="childList")for(const a of c.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&l(a)}).observe(document,{childList:!0,subtree:!0});function n(r){const c={};return r.integrity&&(c.integrity=r.integrity),r.referrerPolicy&&(c.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?c.credentials="include":r.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function l(r){if(r.ep)return;r.ep=!0;const c=n(r);fetch(r.href,c)}})();function _(e,t){return e[0]>t&&e[1]>t?1:0}function X(e,t){return e>t?1:0}function w(e,t,n){let l=D((e-t)/(n-t),0,1);return l*l*(3-2*l)}function R(e,t){return Math.sqrt((e[0]-t[0])*(e[0]-t[0])+(e[1]-t[1])*(e[1]-t[1]))}function K(e){return e-Math.floor(e)}function U(e){return[e[0]-Math.floor(e[0]),e[1]-Math.floor(e[1])]}function D(e,t,n){return Math.min(Math.max(e,t),n)}function V(e,t,n){return[Math.min(Math.max(e[0],t[0]),n[0]),Math.min(Math.max(e[1],t[1]),n[1])]}function F(e){return Math.sqrt(e[0]*e[0]+e[1]*e[1])}function $(e,t){return w(t-.02,t,e[1])-w(t,t+.02,e[1])}function G(e,t,n){console.log("IDK")}function H(e,t,n){return w(R(e,t),n-.008,n)}function x(e){return[Math.pow(e[0],2)-Math.pow(e[1],2),2*e[0]*e[1]]}function j(e,t){let n=[0,0];for(let l=0;l<t;l++)if(n=[x(n)[0]+e[0],x(n)[1]+e[1]],F(n)>2)return l/t;return 1}function P(e,t){return[e[0]*t,e[1]*t]}function z(e,t){return[e[0]+t[0],e[1]+t[1]]}const L=Object.freeze(Object.defineProperty({__proto__:null,circle:H,clamp:D,clampVec2:V,distance:R,fract:K,fractVec2:U,iterateMandelbrot:j,lengthVec2:F,move:z,plot:$,rectangle:G,smoothstep:w,squareImaginary:x,step:X,stepVec2:_,zoom:P},Symbol.toStringTag,{value:"Module"})),J=`// You can write code here! All vectors work like arrays (well they are arrays), there are some built in functions but you can make your own
// This text gets added in full as a script so you can define functions and do whatever your browser supports


//w - width of screen, h - width of screen, time (currently not working properly)
function shaderMain(x, y, w, h, time) {
  let fragColor = [1, 1, 1, 1]
  let uv = [x / w, y / h]

  uv = [uv[0] - 0.5, uv[1] - 0.5]
  uv = zoom(uv, zoomScale)
  uv = [uv[0] + 0.5, uv[1] + 0.5]
  uv = move(uv, [xScale, yScale])

  fragColor[0] = 1 - iterateMandelbrot(uv, 25)
  fragColor[1] = fragColor[0]

  // Try chaging the radius (the last parameter), refresh the shader and see what happens
  fragColor[2] = circle(uv, [0.5, 0.5], 0.01) 
  return fragColor
}
`,O=20,k=7,Q=400;let Z=800,ee=800,s=3,S=3,v=!0,B=null,p=null,Y=!1,W=!1,q=!1,A=!1,I=3,M=0,b=0;function N(e,t,n,l=r=>r){return function(){B&&clearTimeout(B),B=setTimeout(()=>{p=setInterval(()=>{S<s?(s-k<S?s-=1:s-=k,f(),v=!1):(v=!0,p&&clearTimeout(p),p=null)},50),f()},Q),v&&(S=s,s=O,v=!1),p!=null&&(s=O,clearTimeout(p),p=null);const r=l(parseFloat(e.value));n(r),t.innerHTML="  "+(Math.round(parseFloat(e.value)*100)/100).toFixed(2),f()}}function te(){console.log("%c My bad shader","font-weight: bold; font-size: 50px;color: red; text-shadow: 3px 3px 0 rgb(217,31,38) , 6px 6px 0 rgb(226,91,14) , 9px 9px 0 rgb(245,221,8) , 12px 12px 0 rgb(5,148,68) , 15px 15px 0 rgb(2,135,206) , 18px 18px 0 rgb(4,77,145) , 21px 21px 0 rgb(42,21,113)"),console.log("%c It works but barely! Yay!","font-size: 20px;font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;");let e=document.getElementById("canvas");e.width=ee,e.height=Z;let t=document.getElementById("resSlider");t.oninput=function(){s=parseFloat(t.value);let g=document.getElementById("resNum");g.innerHTML="  "+t.value,f()};let n=document.getElementById("zoomSlider");n.oninput=function(){I=parseFloat(n.value),f()};let l=document.getElementById("xSlider"),r=document.getElementById("xNum");l.oninput=N(l,r,g=>M=g);let c=document.getElementById("ySlider"),a=document.getElementById("yNum");c.oninput=N(c,a,g=>b=g,g=>-g);for(var h=document.getElementsByTagName("input"),d=0;d<h.length;d++)h[d].type=="checkbox"&&(h[d].checked=!1);var i=document.getElementById("code");i&&(i.innerHTML=J),f();const o=document.getElementById("invert");o&&(o.onchange=()=>{W=o.checked,f()});const m=document.getElementById("greyscale");m&&(m.onchange=()=>{Y=m.checked,f()});const u=document.getElementById("flipX");u&&(u.onchange=()=>{q=u.checked,f()});const y=document.getElementById("flipY");y&&(y.onchange=()=>{A=y.checked,f()});const E=document.getElementById("refreshShaderBtn");E&&(E.onclick=()=>f());const C=document.getElementById("runCustomShaderBtn");C&&(C.onclick=()=>re());const T=document.getElementById("asciiDrawBtn");T&&(T.onclick=()=>ae())}function f(){const e=window.performance.now();ce();let t=document.getElementById("canvas");if(t.getContext){let r=t.getContext("2d");if(!r)return;const c=t.width/s,a=t.height/s,h=Date.now();for(let d=0;d<a;d++)for(let i=0;i<c;i++){let o=window.shaderMain(q?a-d:d,A?c-i:i,c,a,h);if(W&&(o=[1-o[0],1-o[1],1-o[2],o[3]]),Y){let m=le([o[0],o[1],o[2]]);o=[m[0],m[1],m[2],o[3]]}r.fillStyle=oe([o[0],o[1],o[2]],o[3]),r.fillRect(d*s,i*s,s,s)}}let l=window.performance.now()-e;console.log(`The draw method took ${l} milliseconds.`)}function ne(e=20){const t="$@B%8&WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\|()1{}[]?-_+~<>i!lI;:,\"^`'. ";let n="",l=document.getElementById("canvas"),r=l.getContext("2d");if(!r)return"Couldn't get canvas context.";const c=l.width,a=l.height;for(let i=0;i<a/e;i++){for(let o=0;o<c/e;o++)n+=h(d(r.getImageData(o*e,i*e,e,e).data))+" ";n+=`
`}return n;function h(i){return t[Math.round((t.length-1)*i)]}function d(i){let o=[];for(let u=0;u<i.length;u+=4){let y=(i[u]+i[u+1]+i[u+2]+i[u+3])/4;o.push(y)}let m=0;for(let u=0;u<o.length;u++)m+=o[u];return Math.round(m/o.length)/255}}function re(){let e=document.getElementsByTagName("head")[0],t=document.getElementById("customShader");t!==null&&t.remove();const n=document.createElement("script");n.id="customShader",n.type="text/javascript";const l=document.getElementById("code");n.innerHTML=l?l.value:"",e.appendChild(n),f()}function oe(e,t=1){return"rgba("+e[0]*255+","+e[1]*255+","+e[2]*255+","+t+")"}function le(e,t=1){let n=e[0]*.299+e[1]*.587+e[2]*.144;return[n,n,n]}function ce(){let e=document.getElementById("canvas");if(e.getContext){let t=e.getContext("2d");if(!t)return;t.clearRect(0,0,e.width,e.height)}}function ae(){let e=parseFloat(document.getElementById("asciiRes").value);e<7&&console.warn(`THIS WILL BE SLOW 
 It may not even finish 
 You have been warned (well you already clicked it so this isn't really a warning)`);let t=ne(e);console.log(t);let n=document.getElementById("asciiOut");n&&(n.innerHTML=t)}const ie=(e,t,n,l,r)=>{let c=[1,1,1,1],a=[e/n,t/l];return a=[a[0]-.5,a[1]-.5],a=P(a,I),a=[a[0]+.5,a[1]+.5],a=z(a,[M,b]),c[0]=1-j(a,25),c[1]=c[0],c[2]=H(a,[.5,.5],.01),c};Object.keys(L).forEach(e=>{window[e]=L[e]});Object.defineProperty(window,"zoomScale",{get(){return I},configurable:!0});Object.defineProperty(window,"xScale",{get(){return M},configurable:!0});Object.defineProperty(window,"yScale",{get(){return b},configurable:!0});window.shaderMain=ie;window.addEventListener("DOMContentLoaded",()=>{te()});
